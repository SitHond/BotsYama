const { SlashCommandBuilder, EmbedBuilder } = require('discord.js');
const { Op } = require('sequelize'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Op

module.exports = {
    data: new SlashCommandBuilder()
        .setName('top')
        .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≤–æ–π—Å-—á–∞—Ç–∞—Ö.'),
    async execute(interaction) {
        const { guild, client } = interaction;
        const User = client.sequelize.models.User;

        try {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            const users = await User.findAll({
                where: { guildId: guild.id, activity: { [Op.gt]: 0 } },
                order: [['activity', 'DESC']],
                limit: 10, // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            });

            if (users.length === 0) {
                return interaction.reply('–ù–∏–∫—Ç–æ –µ—â—ë –Ω–µ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω –≤ –≤–æ–π—Å-—á–∞—Ç–∞—Ö –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.');
            }

            // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å —Ç–æ–ø–æ–º –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            let description = '';
            users.forEach((user, index) => {
                const hours = Math.floor(user.activity / 60);
                const minutes = Math.round(user.activity % 60);
                const emoji = index === 0 ? 'ü•á' : index === 1 ? 'ü•à' : index === 2 ? 'ü•â' : 'üî∏';
                description += `${emoji} <@${user.id}> - ${hours}—á ${minutes}–º–∏–Ω\n`;
            });

            // –°–æ–∑–¥–∞–µ–º embed-—Å–æ–æ–±—â–µ–Ω–∏–µ
            const embed = new EmbedBuilder()
                .setColor('#00FF00')
                .setTitle('–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≤–æ–π—Å-—á–∞—Ç–∞—Ö')
                .setDescription(description)
                .setTimestamp();

            await interaction.reply({ embeds: [embed] });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:', error);
            await interaction.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    },
};
